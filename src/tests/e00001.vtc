# Copyright (C) 2016  Dridi Boukelmoune
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

varnishtest "Filter parameters by name"

server s1 "" -start

varnish v1 -vcl+backend {
	import querystring;

	sub vcl_init {
		new ga = querystring.filter();
		ga.add_string("utm_source");
		ga.add_string("utm_medium");
		ga.add_string("utm_campaign");
	}

	sub vcl_recv {
		return (synth(200));
	}

	sub vcl_synth {
		set resp.http.Filtered-URL = ga.apply(req.url);
		set resp.http.Extracted-QS = ga.extract(req.url, mode = keep);
	}
} -start

client c1 {
	txreq -url "/?utm_source=git&utm_campaign=name&utm_medium=vtc"
	rxresp
	expect resp.http.Filtered-URL == "/"
	expect resp.http.Extracted-QS == \
	    "utm_source=git&utm_campaign=name&utm_medium=vtc"

	txreq -url "/?utm_source=git&wrong=name&utm_medium=vtc"
	rxresp
	expect resp.http.Filtered-URL == "/?wrong=name"
	expect resp.http.Extracted-QS == "utm_source=git&utm_medium=vtc"

	txreq -url "/?utm_source=git&wrong=name&easy=vtc"
	rxresp
	expect resp.http.Filtered-URL == "/?wrong=name&easy=vtc"
	expect resp.http.Extracted-QS == "utm_source=git"

	txreq -url "/?&&utm_source=git&&broken=fields&&&&easy=vtc&"
	rxresp
	expect resp.http.Filtered-URL == "/?broken=fields&easy=vtc"
	expect resp.http.Extracted-QS == "utm_source=git"

	txreq -url "/?unrelated=params&no=analytics"
	rxresp
	expect resp.http.Filtered-URL == "/?unrelated=params&no=analytics"
	expect resp.http.Extracted-QS == ""
} -run
